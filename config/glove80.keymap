#include <behaviors.dtsi>
/* Include all behaviour includes needed by system behaviors/macros */
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#include "helper.h"
#include "keypos_glv80.h"
#include "danish.dtsi"

#define ___ &trans

#define BASE 0
#define LOWER 1
#define NUMPAD 2
#define LINUX 3
#define WINDOWS 4
#define MAGIC 5

/* Glove80 system behavior & macros */
ZMK_BEHAVIOR(lower, tap_dance, tapping-term-ms = <200>; bindings = <&mo 1>, <&to 1>;)
ZMK_BEHAVIOR(rgb_ug_status_macro, macro, bindings = <&rgb_ug RGB_STATUS>;)
ZMK_BEHAVIOR(bt_0, macro, bindings = <&out OUT_BLE>, <&bt BT_SEL 0>;)
ZMK_BEHAVIOR(bt_1, macro, bindings = <&out OUT_BLE>, <&bt BT_SEL 1>;)
ZMK_BEHAVIOR(bt_2, macro, bindings = <&out OUT_BLE>, <&bt BT_SEL 2>;)
ZMK_BEHAVIOR(bt_3, macro, bindings = <&out OUT_BLE>, <&bt BT_SEL 3>;)
ZMK_BEHAVIOR(magic, hold_tap, flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&rgb_ug_status_macro>;)

// homerow mods
ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
)

ZMK_BEHAVIOR(hrlt, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&mo>, <&kp>;
)

// tap: sticky shift | double tap: capsword
ZMK_BEHAVIOR(ss_cw, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&sk LSHFT>, <&caps_word>;
)

// tap: backspace | shift + tap: delete | hold: num layer
ZMK_BEHAVIOR(bs_del_num, mod_morph,
    bindings = <&lt NUMPAD BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

// windows sleep macro
ZMK_BEHAVIOR(win_sleep, macro,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&kp LG(X) &kp U &kp S>;
)

// euro sign
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // €

// replace a/o/u/s with German umlauts when NAV and NUM are held jointly
// ZMK_CONDITIONAL_LAYER(NAV NUM, GER)
// test av &numwords
// combos
#undef COMBO_TERM
#define COMBO_TERM 50  // timeout of 40ms (default is 30ms if omitted)
// ZMK_COMBO(combo_sleep,           &win_sleep, RT3 RT4, ALL)         // custom sleep macro, only active on NAV layer
// ZMK_COMBO(combo_copy,            &kp LC(C),  LB2 LB3, ALL)         // Ctrl + C, active on all layers
// ZMK_COMBO(combo_paste,           &kp LC(V),  LB1 LB2, ALL)         // Ctrl + V, active on all layers
ZMK_COMBO(combo_tab_lh,          &kp TAB,       LT1 LT2, ALL)          // R & E, Top  row left hand, 0-gap
ZMK_COMBO(combo_hash_lh,         &kp HASH,      LT2 LT3, ALL)          // E & W, Top  row left hand, 0-gap
ZMK_COMBO(combo_exclamation_lh,  &kp EXCL,      LT1 LT3, ALL)          // R & W, Top  row left hand, 1-gap

ZMK_COMBO(combo_questionmark,    &kp QMARK,     LM1 LM2, ALL)          // F & D, BTM  row left hand, 0-gap
ZMK_COMBO(combo_asterisk,        &kp STAR,      LM2 LM3, ALL)          // D & S, Home row left hand, 0-gap

ZMK_COMBO(combo_greaterthan_lh,  &kp GT,        LB1 LB2, ALL)          // C & V, BTM  row left hand, 0-gap
ZMK_COMBO(combo_lessthan_lh,     &kp LT,        LB2 LB3, ALL)          // X & C, BTM  row left hand, 0-gap

/* ----------------------------- Right Hand ------------------------------------------------------------*/
ZMK_COMBO(combo_lbracket_rh,     &kp LBKT,      RM1 RM2, ALL)          // 7 & 8, Num  row right hand, 0-gap
ZMK_COMBO(combo_rbracket_rh,     &kp RBKT,      RM2 RM3, ALL)          // 8 & 9, Num  row right hand, 0-gap

ZMK_COMBO(combo_slash_rh,        &kp SLASH,     RT1 RT2, ALL)          // U & I, Top  row right hand, 0-gap
ZMK_COMBO(combo_backslash_rh,    &kp BACKSLASH, RT2 RT3, ALL)          // I & O, Top  row right hand, 0-gap
ZMK_COMBO(combo_and_rh,          &kp AMPS,      RT0 RT1, ALL)          // Y & U, Top  row right hand, 0-gap
ZMK_COMBO(combo_equals_rh,       &kp EQUAL,     RT1 RT3, ALL)          // U & O, Top  row right hand, 1-gap

ZMK_COMBO(combo_tilde_rh,        &kp TILDE,     RM0 RM1, ALL)          // H & J, Home row right hand, 0-gap
ZMK_COMBO(combo_lcurly_rh,       &kp LBRC,      RM1 RM2, ALL)          // J & K, Home row right hand, 0-gap
ZMK_COMBO(combo_rcurly_rh,       &kp RBRC,      RM2 RM3, ALL)          // K & L, Home row right hand, 0-gap
ZMK_COMBO(combo_tab_rh,          &kp TAB,       RM1 RM3, ALL)          // J & L, Home row right hand, 1-gap

ZMK_COMBO(combo_lparantheses_rh, &kp LPAR,      RB1 RB2, ALL)          // M & ,, BTM  row right hand, 0-gap
ZMK_COMBO(combo_rparantheses_rh, &kp RPAR,      RB2 RB3, ALL)          // , & .  BTM  row right hand, 0-gap

/* ----------------------------- Both hands ------------------------------------------------------------*/
ZMK_COMBO(combo_n0,              &kp N0,        LM1 RM1, ALL)          // Home row both hands, F & J
ZMK_COMBO(combo_dollasign,       &kp DOLLAR,    LM1 RM3, ALL)          // Home row both hands, F & L

ZMK_COMBO(combo_caps_word,       &caps_word,    LM2 RM2, ALL)          // Home row both hands, D & K

ZMK_COMBO(combo_percent,         &kp PERCENT,   LM3 RM3, ALL)          // Home row both hands, S & L
ZMK_COMBO(combo_caret,           &kp CARET,     LT2 RT2, ALL)          // Home row both hands, E & I
ZMK_COMBO(combo_grave,           &kp GRAVE,     LB2 RB2, ALL)          // Home row both hands, X & C

/* keymap */

ZMK_LAYER(default_layer,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp F1        &kp F2        &kp  F3       &kp F4        &kp F5                                                                                                                                  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &to LINUX     &kp N1        &kp  N2       &kp N3        &kp N4        &kp N5                                                                                                      &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp F11
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &to WINDOWS   &kp Q         &kp W         &hrm LALT E   &kp R         &kp T                                                                                                       &kp Y         &kp U         &hrm RALT I   &kp O         &kp P         &kp F12
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp SQT       &kp A         &hrm LCTRL S  &hrm LSHFT D  &hrlt 1 F     &kp G                                                                                                       &kp H         &hrlt 1 J     &hrm RSHFT K  &hrm RCTRL L  &kp RETURN    &kp NUBS
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp PSCRN     &kp Z         &kp X         &kp C         &kp V         &kp B           &none         &kp DELETE     &none            &none         &none          &numwords        &kp N         &kp M         &kp COMMA     &kp DOT       &kp MINUS     &to 0
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &magic MAGIC 0 &trans       &kp BSPC      &kp ESC       &kp LC(C)                     &lt 2 RET    &hrm LGUI SPACE &none            &none         &sk RSHFT      &key_repeat                    &kp BSPC      &kp ESCAPE    &kp COLON     &kp UNDER     &none
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
)

ZMK_LAYER(lower,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &trans        &trans        &trans        &trans        &trans                                                                                                                                  &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &euro_sign    &trans        &trans        &trans                                                                                                      &kp TILDE     &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &kp PIPE      &kp AT        &kp CARET     &kp GRAVE     &kp PRCNT                                                                                                   &kp N0        &none         &none         &kp LC(RIGHT) &dk_aa        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &kp DOLLAR    &kp DQT       &trans        &trans        &trans                                                                                                      &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &dk_oe        &dk_ae
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans        &trans          &trans        &trans         &trans           &trans        &trans         &trans           &kp RCTRL     &kp LC(LEFT)  &none         &kp LC(RIGHT) &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &magic MAGIC 0 &trans       &trans        &trans        &trans                        &trans        &trans         &trans           &trans        &kp SPACE      &trans                         &trans        &none         &trans        &kp TILDE     &trans
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(numpad,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &trans        &trans        &trans        &trans        &trans                                                                                                                                  &kp KP_NUM    &trans        &trans        &trans        &kp K_WWW
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans        &trans                                                                                                      &kp KP_MULTIPLY &trans      &trans        &trans        &trans        &kp K_SLEEP
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &kp HOME      &kp PG_UP     &trans                                                                                                      &kp KP_SLASH    &kp KP_N7   &kp KP_N8     &kp KP_N9     &kp PSCRN     &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &kp LEFT      &kp UP        &kp DOWN      &kp RIGHT                                                                                                   &kp KP_PLUS     &kp KP_N4   &kp KP_N5     &kp KP_N6     &kp KP_ENTER  &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &kp END       &kp PG_DN     &trans          &trans        &trans         &trans           &trans        &trans         &trans           &kp KP_MINUS    &kp KP_N1   &kp KP_N2     &kp KP_N3     &kp COMMA     &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &kp K_APP     &kp K_COPY                    &trans        &trans         &trans           &trans        &trans         &trans                           &trans      &kp KP_N0     &kp DOT       &none         &trans
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(linux,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &trans        &trans        &trans        &trans        &trans                                                                                                                                  &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans        &trans                                                                                                      &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans        &trans                                                                                                      &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans        &trans                                                                                                      &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans        &trans          &trans        &trans         &trans           &trans        &trans         &trans           &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans                        &trans        &trans         &trans           &trans        &trans         &trans                         &trans        &trans        &trans        &trans        &trans
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

/*TODO: Add custom Windows commands */
ZMK_LAYER(windows,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     ___           ___           ___           ___           ___                                                                                                                                     ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans        &trans                                                                                                      &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans        &trans                                                                                                      &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans        &trans                                                                                                      &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans        &trans          &trans        &trans         &trans           &trans        &trans         &trans           &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &trans        &trans        &trans        &trans        &trans                        &trans        &trans         &none            &trans        &none          &trans                         &trans        &trans        &trans        &trans        &trans
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(magic,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                                                             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &bt BT_CLR    &none         &none         &none         &none                                                                                                                                   &none         &none         &none         &none         &bt BT_CLR_ALL
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none         &none         &none         &none         &none         &none                                                                                                       &none         &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none      &rgb_ug RGB_SPI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                                        &none         &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                                                             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &bootloader &rgb_ug RGB_SPD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                                        &none         &none         &none         &none         &none         &bootloader
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ╭─────────────┬──────────────┬──────────────╮ ╭─────────────┬──────────────┬──────────────╮ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &reset    &none         &none         &none         &none         &none           &bt_2         &bt_3          &none            &none         &none          &none            &none         &none         &none         &none         &none         &reset
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼──────────────┼──────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none         &none         &none         &none         &none                         &bt_0         &bt_1          &out OUT_USB     &none         &none          &none                          &none         &none         &none         &none         &none
// ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴──────────────┴──────────────╯ ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

/* vim: set filetype=devicetree : */
